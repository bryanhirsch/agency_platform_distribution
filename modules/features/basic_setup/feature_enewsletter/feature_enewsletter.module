<?php
/**
 * @file
 * Code for the Feature ENewsletter feature.
 */

include_once 'feature_enewsletter.features.inc';


/**
 *  Implements hook_menu().
 */
function feature_enewsletter_menu() {
  $items['admin/config/content/az-enewsletter'] = array(
    'title' => 'Configure Enewsletter Settings',
    'description' => t('Set Enewsletter Pro Settings'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('feature_enewsletter_config'),
    'access arguments' => array('administer permissions'),
  );

  return $items;
}

/**
 * @param $form
 * @param $form_state
 * @param bool $no_js_use
 * @return mixed
 *
 * Module Configuration page with ajax fields
 */
function feature_enewsletter_config($form, &$form_state, $no_js_use = FALSE) {
  drupal_add_css(drupal_get_path('module', 'feature_enewsletter') . '/enewsletter_config.css');
  $settings = variable_get('feature_enewsletter');
  if (isset($settings['lists'])) {
    $lists_keys = array_keys($settings['lists']);
  }

  $form['#tree'] = TRUE;
  $form['sid'] = array(
    '#type' => 'textfield',
    '#title' => t('Subscription ID'),
    '#size' => 35,
    '#default_value' => isset($settings['sid']) ? $settings['sid'] : '',
    '#required' => TRUE,
  );

  $form['enews_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Enewsletter Pro Subscriptions'),
    '#prefix' => '<div id="az-enews-fieldset-wrapper">',
    '#suffix' => '</div>',
  );

  if (empty($form_state['num_enews'])) {
    if (isset($settings['lists'])) {
      $form_state['num_enews'] = sizeof($settings['lists']);
    }
    else {
      $form_state['num_enews'] = 1;
    }
  }

  for ($i = 0; $i < $form_state['num_enews']; $i++) {
    $form['enews_fieldset']['lists'][$i] = array(
      '#type' => 'container',
      '#attributes' => array(
        'class' => array(
          'enews-list',
        ),
      ),
    );
    $form['enews_fieldset']['lists'][$i]['id'] = array(
      '#type' => 'textfield',
      '#title' => t('Newsletter List ID'),
      '#size' => 5,
      '#default_value' => isset($settings['lists']) ? $lists_keys[$i] : '',
      '#required' => TRUE,
    );
    $form['enews_fieldset']['lists'][$i]['name'] = array(
      '#type' => 'textfield',
      '#title' => t('Newsletter Name'),
      '#size' => 25,
      '#default_value' => isset($settings['lists']) ? $settings['lists'][$lists_keys[$i]]['name'] : '',
      '#required' => TRUE,
    );
    $form['enews_fieldset']['lists'][$i]['description'] = array(
      '#type' => 'textfield',
      '#title' => t('Newsletter Description'),
      '#size' => 25,
      '#default_value' => isset($settings['lists']) ? $settings['lists'][$lists_keys[$i]]['description'] : '',
    );
  }

  $form['enews_fieldset']['buttons'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('enews-buttons'),
    ),
  );
  $form['enews_fieldset']['buttons']['add_enews'] = array(
    '#type' => 'submit',
    '#value' => t('Add one more'),
    '#submit' => array('az_enews_add_one'),
    '#ajax' => array(
      'callback' => 'az_enews_add_one_callback',
      'wrapper' => 'az-enews-fieldset-wrapper',
    ),
  );

  if ($form_state['num_enews'] > 1) {
    $form['enews_fieldset']['buttons']['remove_enews'] = array(
      '#type' => 'submit',
      '#value' => t('Remove the last one'),
      '#submit' => array('az_enews_remove_one'),
      '#ajax' => array(
        'callback' => 'az_enews_add_one_callback',
        'wrapper' => 'az-enews-fieldset-wrapper',
      ),
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
  );

  return $form;
}

/**
 * @param $form
 * @param $form_state
 *
 * Adds another newsletter fieldset
 */
function az_enews_add_one($form, &$form_state) {
  $form_state['num_enews']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function az_enews_add_one_callback($form, $form_state) {
  return $form['enews_fieldset'];
}

/**
 * @param $form
 * @param $form_state
 *
 * Removes the last newsletter set
 */
function az_enews_remove_one($form, &$form_state) {
  if ($form_state['num_enews'] > 1) {
    $form_state['num_enews']--;
  }
  $form_state['rebuild'] = TRUE;
}

/**
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 * Save function for enewsletter settings
 */
function feature_enewsletter_config_submit(&$form, &$form_state) {
  $lists = array();
  foreach ($form_state['values']['enews_fieldset']['lists'] as $list) {
    $lists[$list['id']] = array(
      'name' => $list['name'],
      'description' => $list['description'],
    );
  }
  $settings = array(
    'sid' => $form_state['values']['sid'],
    'lists' => $lists,
  );
  variable_set('feature_enewsletter', $settings);
  drupal_set_message(t('Configuration Settings Saved'));
}

/**
 *  Implements hook_form_ID_alter().
 *
 *  programtically adds a field based on module configurations
 *  which provides a select list of available newsletter listings
 */
function feature_enewsletter_form_enewsletter_subscription_node_form_alter(&$form, &$form_state, $form_id) {
  $settings = variable_get('feature_enewsletter');
  $options = array();
  if (isset($settings['lists'])) {
    foreach ($settings['lists'] as $id => $list) {
      $options[$id] = $list['name'];
    }
    $form['enewsletters'] = array(
      '#type' => 'select',
      '#title' => t('Enewsletter Listings'),
      '#options' => $options,
      '#multiple' => TRUE,
      '#default_value' => explode(',', variable_get('feature_enewsletter_' . $form['nid']['#value'], ''))
    );
    $form['actions']['submit']['#submit'][] = 'az_enews_save_node';
  }
  else {
    drupal_set_message(t('Module not configured for enewsletters. Please set the settings at <a href="/admin/config/content/az-enewsletter">module settings</a>'), 'warning');
    foreach ($form as $key => &$value) {
      if (is_array($value) && isset($value['#type'])) {
        $value['#disabled'] = TRUE;
      }
    }
  }
}


/**
 * @param $form
 * @param $form_state
 *
 * Custom save function to set variable for newsletter list
 */
function az_enews_save_node($form, $form_state) {
  if (isset($form_state['values']['enewsletters']) && !empty($form_state['values']['enewsletters'])) {
    $lists = implode(',', $form_state['values']['enewsletters']);
  }
  else {
    $settings = variable_get('feature_enewsletter', array());
    $lists = implode(',', array_keys($settings['lists']));
  }
  variable_set('feature_enewsletter_' . $form_state['nid'], $lists);
}

/**
 *  Implements hook_node_delete().
 *
 * Deletes the variable for newsletter settings.
 */
function feature_enewsletter_node_delete($node) {
  if ($node->type == 'enewsletter_subscription') {
    variable_del('feature_enewsletter_' . $node->nid);
  }
}

/**
 *  Implements hook_node_view().
 *
 * Collects node field values, then builds the form and appends to the node.
 */
function feature_enewsletter_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'enewsletter_subscription') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    $settings = variable_get('feature_enewsletter');
    $lists = explode(',', variable_get('feature_enewsletter_' . $node->nid, ''));

    // gathers field values
    $vars = array(
      'sid' => isset($settings['sid']) ? $settings['sid'] : '',
      'create_form' => $node_wrapper->field_enews_create_form->value(),
      'opt_out_form' => $node_wrapper->field_enews_opt_out->value(),
      'double_email' => $node_wrapper->field_enews_double_email->value(),
      'include_salutation' => isset($node_wrapper->field_enews_saluation) ? $node_wrapper->field_enews_saluation->value() : 0,
      'include_name' => isset($node_wrapper->field_enews_name) ? $node_wrapper->field_enews_name->value() : 0,
      'include_link' => isset($node_wrapper->field_enews_link) ? $node_wrapper->field_enews_link->value() : 0,
      'link_text' => isset($node_wrapper->field_enews_link_text) ? $node_wrapper->field_enews_link_text->value() : 0,
      'password' => $node_wrapper->field_enews_password->value(),
      'hide_delivery_format' => $node_wrapper->field_enews_format->value(),
      'dont_require_confirm' => isset($node_wrapper->field_enews_confirm) ? $node_wrapper->field_enews_confirm->value() : 0,
      'dont_send_message' => isset($node_wrapper->field_enews_message) ? $node_wrapper->field_enews_message->value() : 0,
      'name_format' => $node_wrapper->field_enews_name_format->value(),
      'require_name' => isset($node_wrapper->field_enews_require_name) ? $node_wrapper->field_enews_require_name->value() : 0,
      'list_format' => $node_wrapper->field_enews_list_format->value(),
      'update_subs' => isset($node_wrapper->field_enews_update_subs) ? $node_wrapper->field_enews_update_subs->value() : 0,
      'update_demo' => isset($node_wrapper->field_enews_update_demo) ? $node_wrapper->field_enews_update_demo->value() : 0,
      'list' => array(),
    );

    foreach ($lists as $key) {
      if ($node->field_enews_descriptions['und'][0]['value']) {
        $vars['list'][$key] = t($settings['lists'][$key]['name'] . ' - ' . $settings['lists'][$key]['description']);
      }
      else {
        $vars['list'][$key] = t($settings['lists'][$key]['name']);
      }
    }


    // build form for either subscripotion or unsubscripe form
    if ($vars['create_form'] == 'in') {
      $form = drupal_build_form('feature_enewsletter_subscribe_form', $vars);
    }
    else {
      $form = drupal_build_form('feature_enewsletter_unsubscribe_form', $vars);
    }

    //append the form to the node
    $node->content['subscription'] = $form;
  }
}


/**
 *  Implements hook_form().
 *
 * Opt-Out Unsubscribe Form
 */
function feature_enewsletter_unsubscribe_form($form, &$form_state) {
  // Unsubscribe from all newsletters
  if ($form_state['opt_out_form'] != 'all') {
    $keys = array_keys($form_state['list']);
    $form['NewsletterListID'] = array(
      '#type' => 'hidden',
      '#value' => isset($keys[0]) ? $keys[0] : '',
    );
  }
  $form['Email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#size' => 35,
    '#required' => TRUE,
  );
  $form['UserOptOutReason'] = array(
    '#type' => 'textfield',
    '#title' => t('Reason for Opting Out'),
    '#size' => 35,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Unsubscribe',
  );
  $form['LogAddress'] = array(
    '#type' => 'hidden',
    '#value' => 'ON',
  );
  $form['SID'] = array(
    '#type' => 'hidden',
    '#value' => $form_state['sid'],
  );
  honeypot_add_form_protection($form, $form_state, array(
    'honeypot',
    'time_restriction'
  ));
  return $form;
}

/**
 * @param $form
 * @param $form_state
 *
 * Checks if given email field is an email address
 */
function feature_enewsletter_unsubscribe_form_validate($form, &$form_state) {
  if (isset($form_state['input']['Email'])) {
    $email = $form_state['input']['Email'];
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
      form_set_error('title', t('Please enter a valid Email Address.'));
    }
  }
}

/**
 * @param $form
 * @param $form_state
 *
 * Sends the data to enewsletter pro and obtains the result.
 * Notifies the user of the appropriate message without going off site.
 */
function feature_enewsletter_unsubscribe_form_submit($form, &$form_state) {

  $curl = curl_init();
  curl_setopt_array($curl, array(
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_URL => 'https://enewsletter.az.gov/members.aspx?Task=UnSubscribe',
    CURLOPT_USERAGENT => 'Codular Sample cURL Request',
    CURLOPT_POST => 1,
    CURLOPT_FOLLOWLOCATION => TRUE,
    CURLOPT_POSTFIELDS => $form_state['values']
  ));
  $resp = curl_exec($curl);
  curl_close($curl);


  if (strpos($resp, $form_state['values']['Email']) !== FALSE) {
    $message = 'We have removed ' . $form_state['values']['Email'] . ' from our database.';
  }
  else {
    $message = 'The email address you provided is not on this newsletter.';
  }
  drupal_set_message(t($message));
}


/**
 *  Implements hook_form().
 *
 * Opt-In Subscription Form
 */
function feature_enewsletter_subscribe_form($form, &$form_state) {
  // Salutation field
  if ($form_state['include_salutation']) {
    $form['Salutation'] = array(
      '#type' => 'select',
      '#title' => t('Salutation'),
      '#options' => array('Mr.' => 'Mr.', 'Mrs.' => 'Mrs.'),
    );
  }

  // Name Field settings
  if ($form_state['include_name']) {
    if ($form_state['name_format'] == 'full') {
      $form['Name'] = array(
        '#type' => 'textfield',
        '#title' => t('Name'),
        '#required' => $form_state['require_name'],
        '#size' => 35,
      );
    }
    else {
      $form['FirstName'] = array(
        '#type' => 'textfield',
        '#title' => t('First Name'),
        '#required' => $form_state['require_name'],
        '#size' => 15,
      );
      $form['LastName'] = array(
        '#type' => 'textfield',
        '#title' => t('Last Name'),
        '#required' => $form_state['require_name'],
        '#size' => 15,
      );
    }
  }

  // Email and re-enter email address
  $form['Email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#required' => TRUE,
    '#size' => 35,
  );
  if ($form_state['double_email']) {
    $form['Email_Confirm'] = array(
      '#type' => 'textfield',
      '#title' => t('Re-Enter Email Address'),
      '#required' => TRUE,
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'feature_enewsletter') . '/email_confirm.js',
        ),
        'css' => array(
          drupal_get_path('module', 'feature_enewsletter') . '/email_confirm.css',
        ),
      ),
      '#size' => 35,
    );
  }

  // Password entry or hidden field
  switch ($form_state['password']) {
    case 'Enter':
      $form['Password'] = array(
        '#type' => 'password',
        '#title' => t('Password'),
        '#required' => TRUE,
        '#size' => 35,
      );
      break;
    case 'IPAddress':
      $form['Password'] = array(
        '#type' => 'hidden',
        '#value' => 'IPAddress',
      );
      break;
    case 'RandomNumber':
      $form['Password'] = array(
        '#type' => 'hidden',
        '#value' => 'RandomNumber',
      );
      break;
  }

  // Dislay the subscription list in desired format
  // Also includes a hidden field to indicate to enewsletter how to read.
  switch ($form_state['list_format']) {
    case 'checkboxes':
      $form['list_markup'] = array(
        '#markup' => t('Select a Newsletter'),
      );
      $form['JoinType'] = array(
        '#type' => 'hidden',
        '#value' => 'Check',
      );
      foreach ($form_state['list'] as $id => $label) {
        $form['list_set']['NewsletterListID_' . $id] = array(
          '#type' => 'checkbox',
          '#title' => t($label),
          '#return_value' => 'ON',
        );
      }
      break;
    case 'radios':
      $form['list_markup'] = array(
        '#markup' => t('Select a Newsletter'),
      );
      $form['NewsletterListID'] = array(
        '#type' => $form_state['list_format'],
        '#options' => $form_state['list'],
      );
      $form['JoinType'] = array(
        '#type' => 'hidden',
        '#value' => 'Radio',
      );
      break;
    case 'select':
      $form['NewsletterListID'] = array(
        '#type' => $form_state['list_format'],
        '#title' => t('Select a Newsletter'),
        '#options' => $form_state['list'],
      );
      $form['JoinType'] = array(
        '#type' => 'hidden',
        '#value' => 'Menu',
      );
      break;
    case 'hidden':
      $form['JoinType'] = array(
        '#type' => 'hidden',
        '#value' => 'Check',
      );
      foreach ($form_state['list'] as $id => $label) {
        $form['NewsletterListID_' . $id] = array(
          '#type' => 'hidden',
          '#value' => 'ON',
        );
      }
      break;
  }

  // Show or hide delivery format
  if ($form_state['hide_delivery_format']) {
    $form['DeliveryFormat'] = array(
      '#type' => 'hidden',
      '#value' => 'HTML',
    );
  }
  else {
    $form['DeliveryFormat'] = array(
      '#type' => 'select',
      '#title' => t('Delivery Format'),
      '#options' => array(
        'HTML' => 'HTML',
        'TEXT' => 'Plain Text',
        'AOL' => 'AOL Text',
      ),
      '#default_value' => 'HTML',
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  // Manage subscription link
  if ($form_state['include_link']) {
    $form['link'] = array(
      '#markup' => l($form_state['link_text'], 'https://enewsletter.az.gov/members.aspx?SID=' . $form_state['sid'])
    );
  }

  // Hidden Fields
  $form['IDList'] = array(
    '#type' => 'hidden',
    '#value' => implode(',', array_keys($form_state['list'])),
  );
  $form['SID'] = array(
    '#type' => 'hidden',
    '#value' => $form_state['sid'],
  );
  if ($form_state['dont_require_confirm']) {
    $form['SendConfirmation'] = array(
      '#type' => 'hidden',
      '#value' => 'False',
    );

    if ($form_state['update_subs']) {
      $form['UpdateSubscriptionsIfEmailExists'] = array(
        '#type' => 'hidden',
        '#value' => 'True',
      );
      if ($form_state['update_demo']) {
        $form['UpdateDemographicsIfSubscriberExists'] = array(
          '#type' => 'hidden',
          '#value' => 'True',
        );
      }
    }
  }
  else {
    $form['SendConfirmation'] = array(
      '#type' => 'hidden',
      '#value' => 'True',
    );
  }
  if ($form_state['dont_send_message']) {
    $form['SendSuccessfulOptInMessage'] = array(
      '#type' => 'hidden',
      '#value' => 'False',
    );
  }
  else {
    $form['SendSuccessfulOptInMessage'] = array(
      '#type' => 'hidden',
      '#value' => 'True',
    );
  }
  $form['B1'] = array(
    '#type' => 'hidden',
    '#value' => 'Subscribe',
  );
  honeypot_add_form_protection($form, $form_state, array(
    'honeypot',
    'time_restriction'
  ));
  return $form;
}

/**
 * @param $form
 * @param $form_state
 *
 * Validates all field entries. Email address is valid and re-enter email
 * matches the initial email address.
 */
function feature_enewsletter_subscribe_form_validate($form, &$form_state) {
  if (isset($form_state['input']['Email'])) {
    $email = $form_state['input']['Email'];
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
      form_set_error('title', t('Please enter a valid Email Address.'));
    }

    if (isset($form_state['input']['Email_Confirm'])) {
      if ($form_state['input']['Email_Confirm'] !== $form_state['input']['Email']) {
        form_set_error('title', t('The emails you entered do not match.'));
      }
    }
  }
}

/**
 * @param $form
 * @param $form_state
 *
 * Sends the data to enewsletter pro and obtains the result.
 * Notifies the user of the appropriate message without going off site.
 */
function feature_enewsletter_subscribe_form_submit($form, &$form_state) {
  $curl = curl_init();
  curl_setopt_array($curl, array(
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_URL => 'https://enewsletter.az.gov/subscribe.aspx?Task=Join',
    CURLOPT_USERAGENT => 'Codular Sample cURL Request',
    CURLOPT_POST => 1,
    CURLOPT_FOLLOWLOCATION => TRUE,
    CURLOPT_POSTFIELDS => $form_state['values']
  ));
  $resp = curl_exec($curl);
  curl_close($curl);

  if ((strpos($resp, 'We have emailed a confirmation') !== FALSE)) {
    $message = 'We have emailed a confirmation to ' . $form_state['values']['Email'] . '. Once you receive this message, click the link to complete your subscription.';
  }
  elseif (strpos($resp, 'You have been subscribed') !== FALSE) {
    $message = 'You have been subscribed to the newsletter list(s) as ' . $form_state['values']['Email'] . '. <br>To unsubscribe, please use the link near the end of each newsletter.';
  }
  else {
    $message = 'Your request could not be completed at this time. If the problem continues, please contact the site administrators.';
  }

  drupal_set_message(t($message));
}

